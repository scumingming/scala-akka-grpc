
// Generated by Akka gRPC. DO NOT EDIT.
package io.schemas

import scala.concurrent.ExecutionContext

import akka.actor.ClassicActorSystemProvider

import akka.grpc.GrpcClientSettings

import akka.grpc.scaladsl.AkkaGrpcClient

import akka.grpc.internal.NettyClientUtils
import akka.grpc.internal.ClientState

import akka.grpc.scaladsl.SingleResponseRequestBuilder
import akka.grpc.internal.ScalaUnaryRequestBuilder

// Not sealed so users can extend to write their stubs
trait AuthServiceClient extends AuthService with AuthServiceClientPowerApi with AkkaGrpcClient

object AuthServiceClient {
  def apply(settings: GrpcClientSettings)(implicit sys: ClassicActorSystemProvider): AuthServiceClient =
    new DefaultAuthServiceClient(settings)
}

final class DefaultAuthServiceClient(settings: GrpcClientSettings)(implicit sys: ClassicActorSystemProvider) extends AuthServiceClient {
  import AuthService.MethodDescriptors._

  private implicit val ex: ExecutionContext = sys.classicSystem.dispatcher
  private val options = NettyClientUtils.callOptions(settings)
  private val clientState = new ClientState(settings, akka.event.Logging(sys.classicSystem, classOf[DefaultAuthServiceClient]))

  
  private def authRequestBuilder(channel: akka.grpc.internal.InternalChannel) =
  
    new ScalaUnaryRequestBuilder(authDescriptor, channel, options, settings)
  
  

  
  /**
   * Lower level "lifted" version of the method, giving access to request metadata etc.
   * prefer auth(io.schemas.AuthRequest) if possible.
   */
  
  override def auth(): SingleResponseRequestBuilder[io.schemas.AuthRequest, io.schemas.AuthResponse] =
    authRequestBuilder(clientState.internalChannel)
  

  /**
   * For access to method metadata use the parameterless version of auth
   */
  def auth(in: io.schemas.AuthRequest): scala.concurrent.Future[io.schemas.AuthResponse] =
    auth().invoke(in)
  

  override def close(): scala.concurrent.Future[akka.Done] = clientState.close()
  override def closed: scala.concurrent.Future[akka.Done] = clientState.closed()

}

object DefaultAuthServiceClient {

  def apply(settings: GrpcClientSettings)(implicit sys: ClassicActorSystemProvider): AuthServiceClient =
    new DefaultAuthServiceClient(settings)
}

trait AuthServiceClientPowerApi {
  
  /**
   * Lower level "lifted" version of the method, giving access to request metadata etc.
   * prefer auth(io.schemas.AuthRequest) if possible.
   */
  
  def auth(): SingleResponseRequestBuilder[io.schemas.AuthRequest, io.schemas.AuthResponse] = ???
  
  

}
